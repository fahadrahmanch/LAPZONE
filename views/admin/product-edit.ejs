
<head>
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="assets/css/main.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">

</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <div style="display: flex; align-items: center; font-family: 'Arial', sans-serif; font-size: 24px; font-weight: bold; color: #333;">
                    <!-- Laptop Icon -->
                    <svg width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 8px;">
                        <rect x="3" y="4" width="18" height="12" rx="2"></rect>
                        <path d="M2 18h20"></path>
                    </svg>
                    
                    <span>LapZone</span>
                </div>            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="/admin/Dashboard"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>

                </li>
                <!-- <li class="menu-item ">
                    <a class="menu-link" href="page-orders-1.html"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                   
                </li> -->
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/categories"> <i class="icon material-icons md-stars"></i></i>
                        <span class="text">Category</span>
                    </a>

                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/users"> <i class="icon material-icons md-store"></i>
                        <span class="text">Users</span>
                    </a>

                </li>
                <li class="menu-item  ">
                    <a class="menu-link" href="/admin/orders"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                   
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/coupen">
                        <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupon</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/brand"> <i class="icon material-icons md-stars"></i>
                        <span class="text">Brands</span> </a>
                </li>
            </ul>
            <hr>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <!-- <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i
                                class="material-icons md-search"></i></button>
                    </div> -->
                    <!-- <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist> -->
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                        class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <!-- <li class="nav-item">
                        <a class="nav-link btn-icon" href="#">
                            <i class="material-icons md-notifications animation-shake"></i>
                            <span class="badge rounded-pill">3</span>
                        </a>
                    </li> -->
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i>
                        </a>
                    </li>
                    <!-- <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i
                                class="material-icons md-cast"></i></a>
                    </li> -->
                    <!-- <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage"
                            aria-expanded="false"><i class="material-icons md-public"></i></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                            <a class="dropdown-item text-brand" href="#"><img src="assets/imgs/theme/flag-us.png"
                                    alt="English">English</a>
                            <a class="dropdown-item" href="#"><img src="assets/imgs/theme/flag-fr.png"
                                    alt="Français">Français</a>
                            <a class="dropdown-item" href="#"><img src="assets/imgs/theme/flag-jp.png"
                                    alt="Français">日本語</a>
                            <a class="dropdown-item" href="#"><img src="assets/imgs/theme/flag-cn.png"
                                    alt="Français">中国人</a>
                        </div>
                    </li> -->
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount"
                            aria-expanded="false"> <img class="img-xs rounded-circle"
                                src="assets/imgs/people/avatar2.jpg" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <!-- <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit
                                Profile</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account
                                Settings</a>
                            <a class="dropdown-item" href="#"><i
                                    class="material-icons md-account_balance_wallet"></i>Wallet</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help
                                center</a> -->
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="/admin/logout"><i
                                    class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>
        <section class="content-main">
            <div class="row">
                <div class="col-12">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-body">
                            <form method="POST" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data" onsubmit="return validateAndSubmit()">
                                <!-- Basic Information -->
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <label for="product_name" class="form-label">Product Name</label>
                                        <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name" value="<%=product.productName%>">
                                        <div id="productName-error" class="error-message text-danger"></div>
                                    </div>
                                    
                                    <div class="col-md-3 mb-4">
                                        <label class="form-label">Category</label>
                                        <select class="form-select" name="category">
                                            <option value="<%= product.category.name %>" selected><%= product.category.name %></option>
                                            <%for(let i=0;i<cat.length;i++){%>
                                                <option value="<%= cat[i].name %>"><%= cat[i].name %></option>
                                            <%}%>
                                        </select>
                                        <div id="category-error" class="error-message text-danger"></div>
                                    </div>
                                    
                                    <div class="col-md-3 mb-4">
                                        <label class="form-label">Brand</label>
                                        <select class="form-select" name="brand">
                                            <%for(let i=0;i<brand.length;i++){%>
                                                <option value="<%= brand[i].brandName %>"><%= brand[i].brandName %></option>
                                            <%}%>
                                        </select>
                                        <div id="brand-error" class="error-message text-danger"></div>
                                    </div>
                                </div>
        
                                <div class="row">
                                    <div class="col-12 mb-4">
                                        <label class="form-label">Full description</label>
                                        <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control" rows="4"><%=product.description%></textarea>
                                        <div id="description-error" class="error-message text-danger"></div>
                                    </div>
                                </div>
        
                                <!-- Variants Section -->
                                <div class="row">
                                    <div class="col-12">
                                        <h4 class="mb-3">Product Variants</h4>
                                        <div id="variantsContainer">
                                            <% for (let i = 0; i < product.variants.length; i++) { %>
                                                <div class="variant-section card p-3 mb-3">
                                                    <h5>Variant <%= i + 1 %></h5>
                                                    <div class="row">
                                                        <div class="col-md-4 mb-3">
                                                            <label for="ram-<%= i %>" class="form-label">RAM</label>
                                                            <input type="text" class="form-control" name="variants[<%= i %>][ram]" id="ram-<%= i %>" value="<%= product.variants[i].ram %>" placeholder="Enter RAM (e.g., 8GB)">
                                                        </div>
                                                        <div class="col-md-4 mb-3">
                                                            <label for="storage-<%= i %>" class="form-label">Storage</label>
                                                            <input type="text" class="form-control" name="variants[<%= i %>][storage]" id="storage-<%= i %>" value="<%= product.variants[i].storage %>" placeholder="Enter Storage (e.g., 512GB SSD)">
                                                        </div>
                                                        <div class="col-md-4 mb-3">
                                                            <label for="processor-<%= i %>" class="form-label">Processor</label>
                                                            <input type="text" class="form-control" name="variants[<%= i %>][processor]" id="processor-<%= i %>" value="<%= product.variants[i].processor %>" placeholder="Enter Processor (e.g., Intel i5)">
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-4 mb-3">
                                                            <label for="regularPrice-<%= i %>" class="form-label">Regular Price</label>
                                                            <input type="number" class="form-control" name="variants[<%= i %>][regularPrice]" id="regularPrice-<%= i %>" value="<%= product.variants[i].regularPrice %>" placeholder="Enter regular price">
                                                        </div>
                                                        <div class="col-md-4 mb-3">
                                                            <label for="salePrice-<%= i %>" class="form-label">Sale Price</label>
                                                            <input type="number" class="form-control" name="variants[<%= i %>][salePrice]" id="salePrice-<%= i %>" value="<%= product.variants[i].salePrice %>" placeholder="Enter sale price">
                                                        </div>
                                                        <div class="col-md-4 mb-3">
                                                            <label for="stock-<%= i %>" class="form-label">Stock</label>
                                                            <input type="number" class="form-control" name="variants[<%= i %>][stock]" id="stock-<%= i %>" value="<%= product.variants[i].stock %>" placeholder="Enter stock quantity">
                                                        </div>
                                                    </div>
                                                    <button type="button" class="btn btn-danger btn-sm align-self-start remove-variant-btn">Remove Variant</button>
                                                </div>
                                            <% } %>
                                        </div>
                                        <button type="button" class="btn btn-secondary mb-4" id="addVariantBtn">Add Another Variant</button>
                                    </div>
                                </div>
        
                                <!-- Images Section -->
                                <div class="row">
                                    <div class="col-12">
                                        <div class="card mb-4">
                                            <div class="card-header">
                                                <h4>Product Images</h4>
                                            </div>
                                            <div class="card-body">
                                                <!-- Existing Images -->
                                                <div class="row mb-4">
                                                    <% for(let i=0; i<product.productImage.length; i++) { %>
                                                        <div class="col-md-3 mb-3">
                                                            <div class="position-relative">
                                                                <img class="img-fluid rounded" src="/uploads/<%= product.productImage[i] %>" alt="Product image">
                                                                <button type="button" onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')" class="btn btn-sm btn-danger position-absolute top-0 end-0 m-2">
                                                                    <i class="fa-thin fa-x"></i>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    <% } %>
                                                </div>
                                                
                                                <!-- New Images Upload -->
                                                <div id="addedImagesContainer" class="row mb-3"></div>
                                                <div class="row">
                                                    <% for(let i = 1; i <= 4; i++) { %>
                                                        <div class="col-md-3 mb-3">
                                                            <div class="image-upload-container">
                                                                <img src="" alt="" id="imgView<%= i %>" class="img-preview mb-2">
                                                                <input class="form-control" type="file" name="images" id="input<%= i %>"
                                                                    accept="image/png, image/jpeg, image/jpg"
                                                                    onchange="viewImage<%= i %>(event), viewImage(event, <%= i %>)">
                                                            </div>
                                                        </div>
                                                    <% } %>
                                                </div>
                                                <div id="images-error" class="error-message text-danger"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
        
                                <!-- Submit Button -->
                                <div class="row">
                                    <div class="col-12">
                                        <button class="btn btn-primary w-100" type="submit">Update Product</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        
        <script>
        document.addEventListener("DOMContentLoaded", () => {
            let variantCount = <%= product.variants.length %>; 
            const addVariantBtn = document.getElementById("addVariantBtn");
            const variantsContainer = document.getElementById("variantsContainer");
        
            addVariantBtn.addEventListener("click", () => {
                const newVariant = document.createElement("div");
                newVariant.className = "variant-section card p-3 mb-3";
                newVariant.innerHTML = `
                    <h5>Variant ${variantCount + 1}</h5>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="ram-${variantCount}" class="form-label">RAM</label>
                            <input type="text" class="form-control" name="variants[${variantCount}][ram]" id="ram-${variantCount}" placeholder="Enter RAM (e.g., 8GB)">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="storage-${variantCount}" class="form-label">Storage</label>
                            <input type="text" class="form-control" name="variants[${variantCount}][storage]" id="storage-${variantCount}" placeholder="Enter Storage (e.g., 512GB SSD)">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="processor-${variantCount}" class="form-label">Processor</label>
                            <input type="text" class="form-control" name="variants[${variantCount}][processor]" id="processor-${variantCount}" placeholder="Enter Processor (e.g., Intel i5)">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="regularPrice-${variantCount}" class="form-label">Regular Price</label>
                            <input type="number" class="form-control" name="variants[${variantCount}][regularPrice]" id="regularPrice-${variantCount}" placeholder="Enter regular price">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="salePrice-${variantCount}" class="form-label">Sale Price</label>
                            <input type="number" class="form-control" name="variants[${variantCount}][salePrice]" id="salePrice-${variantCount}" placeholder="Enter sale price">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="stock-${variantCount}" class="form-label">Stock</label>
                            <input type="number" class="form-control" name="variants[${variantCount}][stock]" id="stock-${variantCount}" placeholder="Enter stock quantity">
                        </div>
                    </div>
                    <button type="button" class="btn btn-danger btn-sm align-self-start remove-variant-btn">Remove Variant</button>
                `;
                variantsContainer.appendChild(newVariant);
                variantCount++;
            });
        
            variantsContainer.addEventListener("click", (e) => {
                if (e.target.classList.contains("remove-variant-btn")) {
                    e.target.closest(".variant-section").remove();
                }
            });
        });
        </script>
        
        <script>
            const variantsContainer = document.getElementById('variants-container');
            const addVariantBtn = document.getElementById('add-variant-btn');
            let variantIndex = 0; // Track variant count
        
            // Add a new variant row
            function addVariant() {
               
                const variantRow = `
                 
                    <div class="row mb-3" id="variant-${variantIndex}">
                        <div class="col-lg-2">
                            <input type="text" class="form-control"  name="variants[${variantIndex}][ram]" placeholder="RAM (e.g., 8GB)" required>
                        </div>
                        <div class="col-lg-2">
                            <input type="text" class="form-control" name="variants[${variantIndex}][processor]" placeholder="Processor (e.g., Intel i5)" required>
                        </div>
                        <div class="col-lg-2">
                            <input type="text" class="form-control" name="variants[${variantIndex}][storage]" placeholder="Storage (e.g., 256GB SSD)" required>
                        </div>
                        <div class="col-lg-2">
                            <input type="number" class="form-control" name="variants[${variantIndex}][quantity]" placeholder="Quantity" min="0" required>
                        </div>
                        <div class="col-lg-2">
                            <input type="number" class="form-control" name="variants[${variantIndex}][regularPrice]" placeholder="Regular Price ($)" min="0" required>
                        </div>
                        <div class="col-lg-2">
                            <input type="number" class="form-control" name="variants[${variantIndex}][salePrice]" placeholder="Sale Price ($)" min="0">
                        </div>
                        <div class="col-lg-2 mt-2">
                            <button type="button" class="btn btn-sm btn-danger" onclick="removeVariant(${variantIndex})">Remove</button>
                        </div>
                    </div>
                `;
                variantsContainer.insertAdjacentHTML('beforeend', variantRow);
                variantIndex++; // Increment index for the next variant
                
            }
        
            // Remove a specific variant row
            function removeVariant(index) {
                // alert(index)
                const variantRow = document.getElementById(`variant-${index}`);
                if (variantRow) {
                    variantRow.remove();
                }
            }
        
            // Attach event to the "Add Variant" button
            addVariantBtn.addEventListener('click', addVariant);
        
            // Add the first variant row by default
            addVariant();
        </script>
        
        <script>
            function deleteSingleImage(imageId,productId){
                $.ajax({
                    url:"/admin/deleteImage",
                    method:'post',
                    data:{imageNameToServer:imageId,productIdToServer:productId},
                    success:((response)=>{
                        if(response.status===true){
                            window.location.reload()
                        }
                    })
                })
            }
        </script>
        <script>
    //         function validateAndSubmit() {
    //     // Clear all previous error messages
    //     const errorElements = document.querySelectorAll('.error-message');
    //     errorElements.forEach(element => element.innerHTML = '');

    //     let isValid = true;

    //     // Validate Product Name
    //     const productName = document.getElementById('product_name').value;
    //     if (!productName.trim()) {
    //         document.getElementById('productName-error').innerHTML = 'Product name is required';
    //         isValid = false;
    //     }

    //     // Validate Description
    //     const description = document.getElementById('descriptionid').value;
    //     if (!description.trim()) {
    //         document.getElementById('description-error').innerHTML = 'Description is required';
    //         isValid = false;
    //     }

    //     // Validate Variants
    //     const variantSections = document.querySelectorAll('.variant-section');
    //     if (variantSections.length === 0) {
    //         // alert('At least one variant is required');
    //         isValid = false;
    //     }

    //     // Validate each variant
    //     variantSections.forEach((section, index) => {
    //         // RAM validation
    //         const ram = section.querySelector(`#ram-${index}`).value;
    //         if (!ram.trim()) {
    //             section.querySelector(`#ram-${index}`).insertAdjacentHTML(
    //                 'afterend',
    //                 `<div class="error-message" style="color: red;">RAM is required</div>`
    //             );
    //             isValid = false;
    //         }

    //         const processor = section.querySelector(`#processor-${index}`).value;
    //         if (!processor.trim()) {
    //             section.querySelector(`#processor-${index}`).insertAdjacentHTML(
    //                 'afterend',
    //                 `<div class="error-message" style="color: red;">Processor is required</div>`
    //             );
    //             isValid = false;
    //         }

    //         const storage = section.querySelector(`#storage-${index}`).value;
    //         if (!storage.trim()) {
    //             section.querySelector(`#storage-${index}`).insertAdjacentHTML(
    //                 'afterend',
    //                 `<div class="error-message" style="color: red;">Storage is required</div>`
    //             );
    //             isValid = false;
    //         }

    //         const regularPrice = section.querySelector(`#regularPrice-${index}`).value;
    //         if (!regularPrice || regularPrice <= 0) {
    //             section.querySelector(`#regularPrice-${index}`).closest('.col-md-6').insertAdjacentHTML(
    //                 'beforeend',
    //                 `<div class="error-message" style="color: red;">Valid regular price is required</div>`
    //             );
    //             isValid = false;
    //         }

    //         const salePrice = section.querySelector(`#salePrice-${index}`).value;
    //         if (salePrice && Number(salePrice) > Number(regularPrice)) {
    //             section.querySelector(`#salePrice-${index}`).closest('.col-md-6').insertAdjacentHTML(
    //                 'beforeend',
    //                 `<div class="error-message" style="color: red;">Sale price must be less than regular price</div>`
    //             );
    //             isValid = false;
    //         }

    //         const stock = section.querySelector(`#stock-${index}`).value;
    //         if (!stock || stock < 0) {
    //             section.querySelector(`#stock-${index}`).insertAdjacentHTML(
    //                 'afterend',
    //                 `<div class="error-message" style="color: red;">Valid stock quantity is required</div>`
    //             );
    //             isValid = false;
    //         }
    //     });

    //     // Image validation
    //     const imageInputs = document.querySelectorAll('input[type="file"][name="images"]');
    //     const existingImages = document.querySelectorAll('img[src^="/uploads/"]'); // Check existing images
    //     let hasImage = false;

    //     // Check if new images are uploaded
    //     imageInputs.forEach(input => {
    //         if (input.files.length > 0) {
    //             hasImage = true;
    //         }
    //     });

    //     // Check if existing images are present
    //     if (!hasImage && existingImages.length === 0) {
    //         document.getElementById('images-error').innerHTML = 'At least one image is required';
    //         isValid = false;
    //     }

    //     // Prevent form submission if validation fails
    //     if (!isValid) {
    //         // alert('Please correct the errors before submitting.');
    //     }

    //     return isValid;
    // }


// Add this CSS to your stylesheet




function validateAndSubmit() {
    // Clear all previous error messages
    document.querySelectorAll('.error-message').forEach(el => el.innerHTML = '');
    
    let isValid = true;

    // Validate Product Name
    const productName = document.getElementById('product_name').value.trim();
    if (!productName) {
        document.getElementById('productName-error').innerHTML = 'Product name is required';
        isValid = false;
    }

    // Validate Category
    const category = document.querySelector('select[name="category"]').value.trim();
    if (!category) {
        document.getElementById('category-error').innerHTML = 'Category is required';
        isValid = false;
    }

    // Validate Brand
    const brand = document.querySelector('select[name="brand"]').value.trim();
    if (!brand) {
        document.getElementById('brand-error').innerHTML = 'Brand is required';
        isValid = false;
    }

    // Validate Description
    const description = document.getElementById('descriptionid').value.trim();
    if (!description) {
        document.getElementById('description-error').innerHTML = 'Description is required';
        isValid = false;
    }

    // Validate Variants
    const variantSections = document.querySelectorAll('.variant-section');
    if (variantSections.length === 0) {
        alert('At least one variant is required');
        isValid = false;
    }

    // Validate each variant
    variantSections.forEach((section, index) => {
        // Remove existing error messages before validation
        section.querySelectorAll('.error-message').forEach(el => el.remove());

        // RAM validation
        const ramInput = section.querySelector(`#ram-${index}`);
        if (!ramInput.value.trim()) {
            ramInput.insertAdjacentHTML('afterend', `<div class="error-message text-danger">RAM is required</div>`);
            isValid = false;
        }

        // Processor validation
        const processorInput = section.querySelector(`#processor-${index}`);
        if (!processorInput.value.trim()) {
            processorInput.insertAdjacentHTML('afterend', `<div class="error-message text-danger">Processor is required</div>`);
            isValid = false;
        }

        // Storage validation
        const storageInput = section.querySelector(`#storage-${index}`);
        if (!storageInput.value.trim()) {
            storageInput.insertAdjacentHTML('afterend', `<div class="error-message text-danger">Storage is required</div>`);
            isValid = false;
        }

        // Regular Price validation
        const regularPriceInput = section.querySelector(`#regularPrice-${index}`);
        if (!regularPriceInput.value || Number(regularPriceInput.value) <= 0) {
            regularPriceInput.insertAdjacentHTML('afterend', `<div class="error-message text-danger">Valid regular price is required</div>`);
            isValid = false;
        }

        // Sale Price validation
        const salePriceInput = section.querySelector(`#salePrice-${index}`);
        if (salePriceInput.value && Number(salePriceInput.value) > Number(regularPriceInput.value)) {
            salePriceInput.insertAdjacentHTML('afterend', `<div class="error-message text-danger">Sale price must be less than regular price</div>`);
            isValid = false;
        }

        // Stock validation
        const stockInput = section.querySelector(`#stock-${index}`);
        if (!stockInput.value || Number(stockInput.value) < 0) {
            stockInput.insertAdjacentHTML('afterend', `<div class="error-message text-danger">Valid stock quantity is required</div>`);
            isValid = false;
        }
    });

    // Image validation
    const imageInputs = document.querySelectorAll('input[type="file"][name="images"]');
    const existingImages = document.querySelectorAll('img[src^="/uploads/"]'); // Check existing images
    let hasImage = existingImages.length > 0;

    // Check if new images are uploaded
    imageInputs.forEach(input => {
        if (input.files.length > 0) {
            hasImage = true;
        }
    });

    if (!hasImage) {
        document.getElementById('images-error').innerHTML = 'At least one image is required';
        isValid = false;
    }

    // Prevent form submission if validation fails
    return isValid;
}

const style = document.createElement('style');
style.textContent = `
    .error-message {
        color: red;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
`;
document.head.appendChild(style);
            function validateForm() {
                
                let isValid = true;
            
              const productName = document.getElementById("product_name").value;
              
              if (!productName.trim()) {
                 productName.innerHTML='product name is'
                isValid = false;
              } else {
                document.getElementById("productName-error").innerText = "";
              }

              // Add more validation checks for other fields (category, description, prices, etc.)

              return isValid;
            }

            function viewImage(event, index) {
                const input = event.target;
                const reader = new FileReader();
                reader.onload = function () {
                    const dataURL = reader.result;
                    const image = document.getElementById("imgView" + index);
                    image.src = dataURL;

                    // Initialize cropper
                    const cropper = new Cropper(image, {
                        aspectRatio: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 1,
                        zoomable: true,
                    });

                    const cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
                    cropperContainer.style.display = "block";

                    const saveButton = document.querySelector("#saveButton" + index);
                    saveButton.addEventListener("click", async function () {
                        const croppedCanvas = cropper.getCroppedCanvas();
                        const croppedImage = document.getElementById("croppedImg" + index);
                        croppedImage.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

                        const timestamp = new Date().getTime();
                        const fileName = `cropped-img-${timestamp}-${index}.png`;

                        await croppedCanvas.toBlob((blob) => {
                            const input = document.getElementById("input" + index);
                            const imgFile = new File([blob], fileName, { type: "image/png" });

                            const fileList = new DataTransfer();
                            fileList.items.add(imgFile);
                            input.files = fileList.files;
                        });

                        cropperContainer.style.display = "none";
                        cropper.destroy();
                    });
                };

                reader.onerror = function () {
                    // alert("Failed to read the image file.");
                };

                reader.readAsDataURL(input.files[0]);
            }

            document.querySelectorAll('input[type="file"]').forEach((input) => {
                input.addEventListener("change", (event) => {
                    const index = input.id.replace("input", "");
                    viewImage(event, index);
                });
            });

            const selectedImages = [];
            function handleFileSelect(event) {
                const addedImagesContainer = document.getElementById("addedImagesContainer");
                addedImagesContainer.innerHTML = "";
                const files = event.target.files;

                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    selectedImages.push(file);

                    const thumbnail = document.createElement("div");
                    thumbnail.classList.add("thumbnail");

                    const img = document.createElement("img");
                    img.src = URL.createObjectURL(file);
                    img.alt = "thumbnail";
                    img.style.width = "50px";
                    img.style.height = "auto";

                    const removeIcon = document.createElement("span");
                    removeIcon.classList.add("remove-icon");
                    removeIcon.innerHTML = "&times;";
                    removeIcon.addEventListener("click", function () {
                        const index = selectedImages.indexOf(file);
                        if (index !== -1) {
                            selectedImages.splice(index, 1);
                        }
                        thumbnail.remove();
                    });

                    thumbnail.appendChild(img);
                    thumbnail.appendChild(removeIcon);
                    addedImagesContainer.appendChild(thumbnail);
                }
            }
        </script>
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                        document.write(new Date().getFullYear())
                    </script> ©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="assets/js/vendors/select2.min.js"></script>
    <script src="assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="assets/js/main.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
</body>

</html>